datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id                 Int                  @id @default(autoincrement())
  name               String
  description        String?
  price              Float
  variants           Variant[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  image              Image[]
  category           Category            @relation(fields: [categoryId], references: [id])
  categoryId         Int
  brand              Brand               @relation(fields: [brandId], references: [id])
  brandId            Int
  productCollections ProductCollections[]
  review             Review[]
  rating Int?
  thumbnail String?
  images Json?
  slug       String      @unique
  reviewCount Int?
}

model Variant {
  id        Int         @id @default(autoincrement())
  sku       String      @unique
  price     Float
  stock     Int         @default(0)
  product   Product     @relation(fields: [productId], references: [id])
  productId Int
  color     Color       @relation(fields: [colorId], references: [id])
  colorId   Int
  size      Size        @relation(fields: [sizeId], references: [id])
  sizeId    Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  image     Image[]
  orderItem OrderItem[]
  thumbnail String?

  @@unique([productId, colorId, sizeId])
}

model Color {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  hexCode  String?
  variants Variant[]
}

model Size {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  variants Variant[]
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  variant   Variant? @relation(fields: [variantId], references: [id])
  variantId Int?
  createdAt DateTime @default(now())
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Customer {
  id              Int               @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String            @unique
  password        String
  phone           String?           @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  addresses       Address[]
  orders          Order[]
  customerVoucher CustomerVoucher[]
  Review          Review[]
}

model Address {
  id         Int      @id @default(autoincrement())
  street     String
  city       String
  state      String
  postalCode String
  country    String
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Order      Order[]

  @@index([customerId])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Order {
  id          Int         @id @default(autoincrement())
  orderNumber String      @unique
  total       Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  customer    Customer    @relation(fields: [customerId], references: [id])
  customerId  Int
  orderItems  OrderItem[]
  address     Address?    @relation(fields: [addressId], references: [id])
  addressId   Int?
  Voucher     Voucher?    @relation(fields: [voucherId], references: [id])
  voucherId   Int?

  @@index([customerId])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  variant   Variant @relation(fields: [variantId], references: [id])
  variantId Int

  @@index([orderId])
}

model Voucher {
  id               Int               @id @default(autoincrement())
  code             String            @unique
  description      String?
  discountType     DiscountType // Loại giảm giá: percentage hoặc fixed
  discountValue    Float // Giá trị giảm giá: % hoặc số tiền cụ thể
  minOrderValue    Float? // Giá trị đơn hàng tối thiểu để áp dụng voucher
  usageLimit       Int? // Số lần sử dụng tối đa cho voucher
  usageCount       Int               @default(0) // Số lần đã sử dụng
  expiresAt        DateTime? // Ngày hết hạn
  isActive         Boolean           @default(true)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  orders           Order[] // Đơn hàng đã áp dụng voucher
  customerVouchers CustomerVoucher[] // Quan hệ nhiều-nhiều với Customer

  @@index([isActive, expiresAt])
}

model CustomerVoucher {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  voucher    Voucher  @relation(fields: [voucherId], references: [id])
  voucherId  Int
  createdAt  DateTime @default(now())

  @@unique([customerId, voucherId])
}

enum DiscountType {
  PERCENTAGE
  FIXED
}

model Collection {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  description        String?
  slug               String               @unique
  image              String? // URL hình ảnh đại diện cho collection
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  ProductCollections ProductCollections[]

  @@index([slug])
}

model ProductCollections {
  id           Int        @id @default(autoincrement())
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int
  product      Product    @relation(fields: [productId], references: [id])
  productId    Int
}

model Review {
  id         Int      @id @default(autoincrement())
  rating     Int // Giá trị đánh giá, ví dụ: 1-5
  comment    String? // Bình luận về sản phẩm
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int

  @@unique([customerId, productId])
}

model Employee {
  id            Int          @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String       @unique
  password      String
  role          Role         @default(EMPLOYEE)
  isActive      Boolean      @default(true)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}
